<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Haner.Du</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://haner199401.github.io/"/>
  <updated>2021-05-26T05:34:56.736Z</updated>
  <id>https://haner199401.github.io/</id>
  
  <author>
    <name>Haner</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>乘法口诀表打印</title>
    <link href="https://haner199401.github.io/2017/07/14/clc-disp/"/>
    <id>https://haner199401.github.io/2017/07/14/clc-disp/</id>
    <published>2017-07-14T09:40:31.000Z</published>
    <updated>2021-05-26T05:34:56.736Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/chengfakoujue.gif" alt><br><a id="more"></a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.list</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.list</span> <span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid gray;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">1px</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">win</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">var</span> Print = <span class="function"><span class="keyword">function</span> (<span class="params">container</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (!(<span class="keyword">this</span> <span class="keyword">instanceof</span> Print)) &#123;</span><br><span class="line">                  <span class="keyword">return</span> <span class="keyword">new</span> Print();</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">this</span>.cells = []; <span class="comment">//保存 cell 数组</span></span><br><span class="line">              <span class="keyword">this</span>.flag = <span class="literal">false</span>; <span class="comment">//控制是否倒序显示</span></span><br><span class="line">              <span class="keyword">this</span>.curren = <span class="number">0</span>; <span class="comment">//当前所显示的 cell 的下标</span></span><br><span class="line">              <span class="keyword">this</span>.timer = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">this</span>.container = <span class="built_in">document</span>.getElementById(container) || <span class="built_in">document</span>.body;</span><br><span class="line"></span><br><span class="line">              <span class="comment">/**</span></span><br><span class="line"><span class="comment">               * 生成口诀dom</span></span><br><span class="line"><span class="comment">               */</span></span><br><span class="line">              <span class="function"><span class="keyword">function</span> <span class="title">createDomArr</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">                      <span class="keyword">var</span> row = Print.creteEle(<span class="string">'div'</span>);</span><br><span class="line">                      row.className = <span class="string">'list'</span>;</span><br><span class="line">                      <span class="keyword">this</span>.container.appendChild(row);</span><br><span class="line"></span><br><span class="line">                      <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                          <span class="keyword">var</span> cell = Print.creteEle(<span class="string">'div'</span>);</span><br><span class="line">                          cell.className = <span class="string">'item'</span>;</span><br><span class="line">                          cell.innerText = i + <span class="string">'X'</span> + j + <span class="string">'='</span> + i * j;</span><br><span class="line">                          row.appendChild(cell);</span><br><span class="line">                          <span class="keyword">this</span>.cells.push(cell);</span><br><span class="line">                      &#125;</span><br><span class="line"></span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              createDomArr.call(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          Print.creteEle = <span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="built_in">document</span>.createElement(el);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//打印速度</span></span><br><span class="line">          Print.SPEED = <span class="number">100</span>;</span><br><span class="line">          <span class="comment">//主函数</span></span><br><span class="line">          Print.prototype.run = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (<span class="keyword">this</span>.curren === <span class="keyword">this</span>.cells.length &amp;&amp; <span class="keyword">this</span>.flag) &#123;</span><br><span class="line">                  clearTimeout(<span class="keyword">this</span>.timer);</span><br><span class="line">                  <span class="keyword">var</span> i = <span class="number">0</span>,</span><br><span class="line">                      len = <span class="keyword">this</span>.cells.length;</span><br><span class="line">                  <span class="keyword">for</span> (i; i &lt; len; i++) &#123;</span><br><span class="line">                      <span class="keyword">this</span>.cells[i].style.display = <span class="string">'inline-block'</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="keyword">return</span>;</span><br><span class="line">              &#125;</span><br><span class="line">          </span><br><span class="line">              <span class="keyword">if</span> (<span class="keyword">this</span>.curren === <span class="keyword">this</span>.cells.length) &#123;</span><br><span class="line">                  <span class="keyword">this</span>.curren = <span class="number">0</span>;<span class="comment">//重置，也可以 this.curren-- 就不需要 reverse 了。</span></span><br><span class="line">                  <span class="keyword">this</span>.cells.reverse();<span class="comment">//颠倒</span></span><br><span class="line">                  <span class="keyword">this</span>.flag = <span class="literal">true</span>;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                  self.run();</span><br><span class="line">              &#125;, Print.SPEED);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">this</span>.cells[<span class="keyword">this</span>.curren++].style.display = <span class="keyword">this</span>.flag ? <span class="string">'none'</span> : <span class="string">'inline-block'</span>;</span><br><span class="line">          &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              Print().run();</span><br><span class="line">          &#125;, Print.SPEED);</span><br><span class="line"></span><br><span class="line">      &#125;)(<span class="built_in">window</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/chengfakoujue.gif&quot; alt&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript 笔记(一)</title>
    <link href="https://haner199401.github.io/2017/06/28/javascript-note1/"/>
    <id>https://haner199401.github.io/2017/06/28/javascript-note1/</id>
    <published>2017-06-28T11:05:22.000Z</published>
    <updated>2021-05-26T05:34:56.736Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/25916dad435a80a3a42083d26725ca31.jpeg" alt><br><a id="more"></a></p><h4 id="题目一"><a href="#题目一" class="headerlink" title="题目一"></a>题目一</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!(<span class="string">"a"</span> <span class="keyword">in</span> <span class="built_in">window</span>)) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">alert(a);</span><br></pre></td></tr></table></figure><p><strong><em> 解析： </em></strong></p><ul><li>变量声明 –&gt; 变量赋值</li><li>变量移动到作用域的顶部</li><li>执行上下文 –&gt; 创建 VO(Variable Object) –&gt; 执行代码</li></ul><p><strong><em> 实际JavaScript引擎拆分后的代码 </em></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">VO:</span><br><span class="line">(global) = &#123;</span><br><span class="line">    a:<span class="literal">undefined</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!(<span class="string">'a'</span> <span class="keyword">in</span> <span class="built_in">window</span>))&#123;</span><br><span class="line">    a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">alert(a);</span><br></pre></td></tr></table></figure><h4 id="题目二"><a href="#题目二" class="headerlink" title="题目二"></a>题目二</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>,</span><br><span class="line">    b = <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">        x &amp;&amp; a(--x);</span><br><span class="line">    &#125;;</span><br><span class="line">alert(a);</span><br></pre></td></tr></table></figure><h4 id="题目三"><a href="#题目三" class="headerlink" title="题目三"></a>题目三</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line">alert(a);</span><br></pre></td></tr></table></figure><h4 id="题目四"><a href="#题目四" class="headerlink" title="题目四"></a>题目四</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">x, y, a</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">arguments</span>[<span class="number">2</span>] = <span class="number">10</span>;</span><br><span class="line">    alert(a);</span><br><span class="line">&#125;</span><br><span class="line">b(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure><h4 id="题目五"><a href="#题目五" class="headerlink" title="题目五"></a>题目五</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">a.call(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/25916dad435a80a3a42083d26725ca31.jpeg&quot; alt&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Calendar</title>
    <link href="https://haner199401.github.io/2016/08/22/calendar/"/>
    <id>https://haner199401.github.io/2016/08/22/calendar/</id>
    <published>2016-08-22T15:12:26.000Z</published>
    <updated>2021-05-26T05:34:56.736Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/my-calendar.gif" alt><br><a id="more"></a></p><h4 id="IE中的问题"><a href="#IE中的问题" class="headerlink" title="IE中的问题"></a>IE中的问题</h4><ul><li>IE 事件源兼容</li><li>IE new Date() BUG</li><li>IE dom.innerHTML = ‘’; BUG<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">removeAllChild:<span class="function"><span class="keyword">function</span> (<span class="params">ele</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (ele.hasChildNodes())&#123;</span><br><span class="line">            ele.removeChild(ele.lastChild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="我的思路"><a href="#我的思路" class="headerlink" title="我的思路"></a>我的思路</h4><ul><li>先把页面基本样子做出来（可以看到我源码里面 index.html 中注释掉的dom结构）</li><li>之后想各个月有什么不同？看下电脑上的日历，点点</li><li>每个月的第一天会变，之后的日期当然是依次排列。</li><li>确定一个月的第一天处于礼拜几？这样就能够渲染出一个月来。</li><li>接下里想一想，上一个月和下一个月 在可视的格子上 是否足够显示? 可以显示几天呢？</li><li>方式一：计算出当前显示的月份有多少行 row * col = 总数，已知总数，已知当前月显示在礼拜几（第一行的第几个呗）这样也就能够计算出上一月能够显示几天喽，下一个同理。</li><li>方式二：行数固定，按照方式一计算就行了。</li><li>Core：[前一个月].concat([当前月],[下一个月]) </li></ul><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a><a href="https://github.com/haner199401/calendar" target="_blank" rel="noopener">源码</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/my-calendar.gif&quot; alt&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vue Toast</title>
    <link href="https://haner199401.github.io/2016/07/08/vue-toast/"/>
    <id>https://haner199401.github.io/2016/07/08/vue-toast/</id>
    <published>2016-07-08T16:49:01.000Z</published>
    <updated>2021-05-26T05:34:56.736Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/vue-toast-demo.gif" alt></p><a id="more"></a><p><strong> Step By Step </strong></p><blockquote><p>环境搭建<code>建议找个手脚架或者Github上的模板</code>  <a href="https://github.com/haner199401/CNode-Vue" target="_blank" rel="noopener">模板</a> <a href="http://yeoman.io/" target="_blank" rel="noopener">Yeoman</a> <a href="http://elemefe.github.io/cooking/" target="_blank" rel="noopener">Cooking</a> …</p><ol><li>安装Node环境</li><li>安装依赖包<a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm</a>,<a href="https://npm.taobao.org/" target="_blank" rel="noopener">cnpm</a>,<a href="http://cn.vuejs.org/" target="_blank" rel="noopener">vue</a>,<a href="https://babeljs.io/" target="_blank" rel="noopener">babel</a> …</li><li>运行代码,走你 ~_~</li></ol></blockquote><p>Toast.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"msg-tip"</span> <span class="attr">transition</span>=<span class="string">"sliderDown"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.sliderDown-transition</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.3s</span> <span class="selector-tag">ease</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.sliderDown-enter</span>, <span class="selector-class">.sliderDown-leave</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">top</span><span class="selector-pseudo">:-100px</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.msg-tip</span>&#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#fdc</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#ffeee6</span>;</span></span><br><span class="line">  position: fixed;</span><br><span class="line">  width: 100%;</span><br><span class="line"><span class="css">  <span class="selector-tag">padding</span><span class="selector-pseudo">:16px</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#666</span>;</span></span><br><span class="line">  font-size: 12px;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  line-height: 16px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/ecmascript-6"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line">        props:&#123;</span><br><span class="line">            message:&#123;</span><br><span class="line"><span class="javascript">                type:<span class="built_in">String</span>,</span></span><br><span class="line"><span class="javascript">                <span class="keyword">default</span>:<span class="string">''</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="如何实现单例调用"><a href="#如何实现单例调用" class="headerlink" title="如何实现单例调用"></a>如何实现单例调用</h4><blockquote><p>想一想不用VUE咋整?</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> Toast = <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getDivEle</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> oDiv = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">            oDiv.innerText = msg || <span class="string">''</span>;</span><br><span class="line">            oDiv.timer = setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(oDiv.timer) oDiv.timer = <span class="literal">null</span>;</span><br><span class="line">                oDiv.remove();</span><br><span class="line">            &#125;,<span class="number">2000</span>);</span><br><span class="line">            <span class="keyword">return</span> oDiv;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//append dom</span></span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(getDivEle());</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>VUE 文件中的 export default 干了什么？</p><ol><li>在vue文件中export default 会默认导出一个对象字面量</li><li>vue-loader进行加载(loader会构造一个组件，之后便可以实例化出该组件)</li><li>所以在 vue 中,多次引用组件就会出现重复的dom结构</li></ol></blockquote><h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span>;</span><br><span class="line"><span class="keyword">import</span> Toast_ <span class="keyword">from</span> <span class="string">'./Toast.vue'</span>;</span><br><span class="line"><span class="keyword">const</span> Toast = Vue.extend(Toast_);</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存实例池</span></span><br><span class="line"><span class="keyword">let</span> instancePool = [];</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取实例</span></span><br><span class="line"><span class="keyword">let</span> getAnInstance = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//避免实例过多,有点单例么..</span></span><br><span class="line">    <span class="keyword">if</span> (instancePool.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> instance = instancePool[<span class="number">0</span>];</span><br><span class="line">        instancePool = [];</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Toast(&#123;</span><br><span class="line">        el: <span class="built_in">document</span>.createElement(<span class="string">'div'</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//保存实例</span></span><br><span class="line"><span class="keyword">let</span> saveInstance = <span class="function"><span class="keyword">function</span>(<span class="params">instance</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (instance) &#123;</span><br><span class="line">        instancePool.push(instance);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导出方法</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params">options</span>)</span>&#123;</span><br><span class="line">    options = options || &#123;&#125;;</span><br><span class="line">    <span class="keyword">let</span> message;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> options === <span class="string">'string'</span>) &#123;</span><br><span class="line">        message = options;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         message = options.message;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//获取实例对象</span></span><br><span class="line">    <span class="keyword">let</span> instance = getAnInstance();</span><br><span class="line">    instance.message = message;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//调用nextTick确保dom结构加载完。</span></span><br><span class="line">    Vue.nextTick(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//添加</span></span><br><span class="line">        instance.$appendTo(<span class="built_in">document</span>.body);</span><br><span class="line">        <span class="comment">//绑定定时器索引</span></span><br><span class="line">        instance.timer = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="comment">//保存实例,再次调用。</span></span><br><span class="line">          saveInstance(instance);</span><br><span class="line">            <span class="comment">//移除定时器</span></span><br><span class="line">          <span class="keyword">if</span>(instance.timer)&#123;</span><br><span class="line">              clearTimeout(instance.timer);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//移除dom</span></span><br><span class="line">          instance.$remove();</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="O-∩-∩-O"><a href="#O-∩-∩-O" class="headerlink" title="O(∩_∩)O~"></a>O(∩_∩)O~</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/vue-toast-demo.gif&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>骑车记</title>
    <link href="https://haner199401.github.io/2016/01/11/bicycling/"/>
    <id>https://haner199401.github.io/2016/01/11/bicycling/</id>
    <published>2016-01-11T11:14:43.000Z</published>
    <updated>2021-05-26T05:34:56.736Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://www.biketo.com/d/file/racing/Events/2014-07-10/d45ce0f168f944f4433227b56a92a5ac.jpg" alt><br><a id="more"></a></p><h3 id="1-简述"><a href="#1-简述" class="headerlink" title="1. 简述"></a>1. 简述</h3><blockquote><ul><li>案发时间:2016年1月11号 清晨8点多了那么一丢丢;</li><li>案发当事人: 面对编程无所不能的传奇人物—-码志(原因嘛…)与美女PM一锅.</li><li>案发经过开始喽→_→</li></ul></blockquote><h3 id="2-人物身份"><a href="#2-人物身份" class="headerlink" title="2. 人物身份"></a>2. 人物身份</h3><h4 id="nbsp-nbsp-nbsp-nbsp-nbsp-一帮翻着山越着岭住在遥远的松江与青浦38线上的上班一族"><a href="#nbsp-nbsp-nbsp-nbsp-nbsp-一帮翻着山越着岭住在遥远的松江与青浦38线上的上班一族" class="headerlink" title="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 一帮翻着山越着岭住在遥远的松江与青浦38线上的上班一族.^_~"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 一帮翻着山越着岭住在遥远的松江与青浦38线上的上班一族.^_~</h4><h3 id="3-主人翁"><a href="#3-主人翁" class="headerlink" title="3. 主人翁"></a>3. 主人翁</h3><h4 id="nbsp-nbsp-nbsp-nbsp-nbsp-阅码无数的段某某"><a href="#nbsp-nbsp-nbsp-nbsp-nbsp-阅码无数的段某某" class="headerlink" title="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 阅码无数的段某某"></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 阅码无数的段某某</h4><h3 id="4-案发经过"><a href="#4-案发经过" class="headerlink" title="4. 案发经过"></a>4. 案发经过</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在一个月不黑,风还行的清晨.天是灰蒙蒙的,好像谁欠了它500块似得. 我抬起头眺望着那脏兮兮的窗户,还能隐隐约约的看到蒙蒙细雨落下.我奋起全身的力气,从那软绵绵的床下走了下去,直奔厨房,洗了洗我的小手,迷迷糊糊的烧了点水,做了我最拿手的荷包蛋,yeah~<br>也许我的动静稍大,吵到了正在熟睡的小伙伴,慢慢大家也都开始起来了.洗吧洗吧都8点一刻了,然而小伙伴也都意识到快要迟到了.要是赶不上8点半的那班地铁,也就一意味着迟到.所以大家都不约而同的冲下楼去.争着抢着去骑那辆已是伤痕累累的小龟王牌电动车.看着我那骨瘦如柴的湿胸码志,那眼神泛起一丝丝懊恼之意,感觉他好想大声呐喊出那么一句话:”凭什么不让我骑电动车”.然而并没有什么卵用,因为他无法战胜他不会骑电动车的事实,最终只能以自行车开始一天的上班之旅.<br>然而故事就慢慢的发生了….</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说时迟那时快啊,湿胸码志拿起他那64GB的爱疯,抬起他那纤细的大拇指,按下开屏键.在屏幕亮起的那一瞬间,看到那豆大搬的数字08:20,我的湿胸好似打了鸡血般的冲动.只见手起刀落的瞬间,我的师兄便以惊人的速度冲向了佘山地铁站方向.然而任他使出吃奶的劲也赶不上那小龟王的速度.想想我那骨瘦如柴的湿胸,载着一个纤纤少女,奋力前行在蒙蒙细雨之中.当他看到时间已缓缓流逝,奈何他也百感交集,无法面对迟到的事实.我的湿胸焦急了.他开始略带愤怒的埋怨着世界,为何自己不能骑电动车!!! 他很想咆哮起来,呐喊起来.<br>也就是在这种混乱的思绪中,事故发生了.. 一个急匆匆的骑行者开始与我的湿胸并行行驶,那13用着一副要挑衅我湿胸的眼神看了看他,忽然猛地左转. 只见我的湿胸像跳水运动员一样甩了出去,后面的人重重的摔在了地上. 我连忙走向前去,扶起了他们倆.轻轻的拍打着身上的泥土.</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下过雨之后的路面总是泥泞,泥土已经深深地烙在那深蓝的牛仔裤上,那么的不和谐,那么的令人懊恼.缓缓之后,他们又开始前行.一跛一跛的迈向了存车处.存好车子之后,两人便走向了地铁站.本想着坐上了地铁,总算松了气.谁知又一次意外发生了. 地铁轰隆隆的行驶着,1站,2站,3站…. 开着开着,我那体弱多病的湿胸似乎感觉有些不对.忽然眼前一黑,身体不听使唤的重重倒下.吓得与他同行的PM闫一脸苍白,不知所措.急忙拿出她那古董似得爱疯4(蛮经典的^_^),给我打了一个电话,然后呢…… </p><h3 id="5-大结局"><a href="#5-大结局" class="headerlink" title="5. 大结局"></a>5. 大结局</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 小明我到了九亭,带了几个包子几袋豆浆去探望我那骨瘦如柴的湿胸.然后就 兵分两路了;我上班啦.一个刺激的清晨就这样过去了………</p><h3 id="6-中心思想"><a href="#6-中心思想" class="headerlink" title="6. 中心思想"></a>6. 中心思想</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;少敲代码多读书,少熬夜来多看报;(^o^)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/shaxiao.gif" alt><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/shaxiao.gif" alt><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/shaxiao.gif" alt><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/shaxiao.gif" alt><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/shaxiao.gif" alt><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/shaxiao.gif" alt><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/shaxiao.gif" alt><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/shaxiao.gif" alt><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/shaxiao.gif" alt><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/shaxiao.gif" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.biketo.com/d/file/racing/Events/2014-07-10/d45ce0f168f944f4433227b56a92a5ac.jpg&quot; alt&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Throttle(节流,阀门) and Debounce(去除抖动,防抖动).</title>
    <link href="https://haner199401.github.io/2015/08/10/throttle-and-debounce/"/>
    <id>https://haner199401.github.io/2015/08/10/throttle-and-debounce/</id>
    <published>2015-08-10T12:00:01.000Z</published>
    <updated>2021-05-26T05:34:56.736Z</updated>
    
    <content type="html"><![CDATA[<p><code>Throttle:节流,是阀门的意思~</code><br><code>Debounce:去除抖动,防抖动的意思~</code></p><h4 id="场景一-监测滚动实现加载更多或者其他业务"><a href="#场景一-监测滚动实现加载更多或者其他业务" class="headerlink" title="场景一(监测滚动实现加载更多或者其他业务)"></a>场景一(监测滚动实现加载更多或者其他业务)</h4><p><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/js-no-throttle.gif" alt></p><h4 id="场景二-远程校验用户名是否唯一"><a href="#场景二-远程校验用户名是否唯一" class="headerlink" title="场景二(远程校验用户名是否唯一)"></a>场景二(远程校验用户名是否唯一)</h4><p><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/js-no-debounce.gif" alt></p><div class="tip"><br>    可能我们会在操作<code>scroll和resize</code>会经常遇到问题,事件触发的太快,导致函数调用频繁。因此就出现了节流函数(也就是阀门一样的功能)。<br>    实现原理:定时器.直白的理解就是隔一段事件去做一件事情(<code>Throttle:限定的时间中函数仅执行一次</code>)<br></div><a id="more"></a><h4 id="Throttle"><a href="#Throttle" class="headerlink" title="Throttle"></a>Throttle</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> throttle = <span class="function"><span class="keyword">function</span> (<span class="params">action, time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> startTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ctx = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> currentTime = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (currentTime - startTime &gt; time) &#123;</span><br><span class="line">            action.apply(ctx);</span><br><span class="line">            startTime = currentTime;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, throttle(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'resize event'</span>)</span><br><span class="line">&#125;, <span class="number">1000</span>));</span><br></pre></td></tr></table></figure><h4 id="Debounce"><a href="#Debounce" class="headerlink" title="Debounce"></a>Debounce</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> debounce = <span class="function"><span class="keyword">function</span> (<span class="params">action, time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> timer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> ctx = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">if</span> (timer) &#123;</span><br><span class="line">            clearTimeout(timer);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        timer = setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            action.apply(<span class="keyword">this</span>);</span><br><span class="line">        &#125;, time);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, debounce(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'resize'</span>);</span><br><span class="line">&#125;, <span class="number">1000</span>));</span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://css-tricks.com/debouncing-throttling-explained-examples/" target="_blank" rel="noopener">https://css-tricks.com/debouncing-throttling-explained-examples/</a></li><li><a href="https://css-tricks.com/the-difference-between-throttling-and-debouncing/" target="_blank" rel="noopener">Throttle 与 Debounced 区别</a></li><li><a href="https://github.com/lodash/lodash/blob/master/lodash.js#L9813" target="_blank" rel="noopener">Lodash</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Throttle:节流,是阀门的意思~&lt;/code&gt;&lt;br&gt;&lt;code&gt;Debounce:去除抖动,防抖动的意思~&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;场景一-监测滚动实现加载更多或者其他业务&quot;&gt;&lt;a href=&quot;#场景一-监测滚动实现加载更多或者其他业务&quot; class=&quot;headerlink&quot; title=&quot;场景一(监测滚动实现加载更多或者其他业务)&quot;&gt;&lt;/a&gt;场景一(监测滚动实现加载更多或者其他业务)&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/js-no-throttle.gif&quot; alt&gt;&lt;/p&gt;
&lt;h4 id=&quot;场景二-远程校验用户名是否唯一&quot;&gt;&lt;a href=&quot;#场景二-远程校验用户名是否唯一&quot; class=&quot;headerlink&quot; title=&quot;场景二(远程校验用户名是否唯一)&quot;&gt;&lt;/a&gt;场景二(远程校验用户名是否唯一)&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/js-no-debounce.gif&quot; alt&gt;&lt;/p&gt;
&lt;div class=&quot;tip&quot;&gt;&lt;br&gt;    可能我们会在操作&lt;code&gt;scroll和resize&lt;/code&gt;会经常遇到问题,事件触发的太快,导致函数调用频繁。因此就出现了节流函数(也就是阀门一样的功能)。&lt;br&gt;    实现原理:定时器.直白的理解就是隔一段事件去做一件事情(&lt;code&gt;Throttle:限定的时间中函数仅执行一次&lt;/code&gt;)&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Markdown 常用的语法记录</title>
    <link href="https://haner199401.github.io/2015/08/10/markdown-syntax/"/>
    <id>https://haner199401.github.io/2015/08/10/markdown-syntax/</id>
    <published>2015-08-10T00:00:00.000Z</published>
    <updated>2021-05-26T05:34:56.736Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/7bf559e2eaec148ff023f0c1c45e3fdf.gif" alt><br><a id="more"></a></p><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br></pre></td></tr></table></figure><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* 1</span><br><span class="line">* 2</span><br><span class="line">* 3</span><br></pre></td></tr></table></figure><ul><li>1</li><li>2</li><li>3</li></ul><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 1</span><br><span class="line">2. 1</span><br><span class="line">3. 1</span><br></pre></td></tr></table></figure><ol><li>1</li><li>1</li><li>1</li></ol><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 例如这样</span><br></pre></td></tr></table></figure><blockquote><p>例如这样</p></blockquote><h1 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h1><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![简介](图片地址)</span><br></pre></td></tr></table></figure><p><img src="http://25.io/mou/Mou_128.png" alt="xxx"></p><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[简介](链接地址)</span><br></pre></td></tr></table></figure><p><a href="http://haner.me" target="_blank" rel="noopener">我的博客</a></p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><pre><code>居中方式 根据第二行的 `:` 位置</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| column1 | column3 | column3|</span><br><span class="line">| :- | :-: | -: |</span><br><span class="line">| 居左 | 居中| 居右 |</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">column1</th><th style="text-align:center">column3</th><th style="text-align:right">column3</th></tr></thead><tbody><tr><td style="text-align:left">居左</td><td style="text-align:center">居中</td><td style="text-align:right">居右</td></tr></tbody></table><ul><li style="list-style: none"><input type="checkbox" checked> @mentions, #refs, <a href>links</a>, <strong>formatting</strong>, and <del>tags</del> supported</li><li style="list-style: none"><input type="checkbox" checked> list syntax required (any unordered or ordered list supported)</li><li style="list-style: none"><input type="checkbox" checked> this is a complete item</li><li style="list-style: none"><input type="checkbox"> this is an incomplete item</li></ul><hr><blockquote><p><a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="noopener">参考链接</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/haner199401/haner199401.github.io/blog-source/images/7bf559e2eaec148ff023f0c1c45e3fdf.gif&quot; alt&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
